{"ast":null,"code":"var _jsxFileName = \"D:\\\\all-react-apps\\\\chatboat_app\\\\src\\\\Components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./chat.css\";\nimport Robo from \"./robo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hi! How can I help you?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const botReplies = [\"I'm here to help!\", \"Can you please clarify?\", \"That's interesting!\", \"Let me think about that...\", \"I'm not sure, but I'll try!\"];\n  const customReplies = {\n    \"good morning\": \"Very Good Morning!\",\n    \"hello\": \"Hi there!\",\n    \"hi\": \"Hello! How can I help you?\",\n    \"how are you\": \"I'm a bot, but I'm functioning well!\",\n    \"bye\": \"Goodbye! Take care!\"\n  };\n  const handleSend = () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    const lowerInput = input.trim().toLowerCase();\n    const botReply = customReplies[lowerInput] || botReplies[Math.floor(Math.random() * botReplies.length)];\n    const botMessage = {\n      sender: \"bot\",\n      text: botReply\n    };\n    setMessages(prev => [...prev, userMessage, botMessage]);\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Robo,\n      alt: \"robot\",\n      id: \"robo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"heading\",\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"CWGma9Lme8XW0HatzL8nvXn26vA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Robo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","input","setInput","botReplies","customReplies","handleSend","trim","userMessage","lowerInput","toLowerCase","botReply","Math","floor","random","length","botMessage","prev","handleKeyDown","e","key","className","children","src","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["D:/all-react-apps/chatboat_app/src/Components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./chat.css\";\r\nimport Robo from \"./robo.png\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"Hi! How can I help you?\" },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const botReplies = [\r\n    \"I'm here to help!\",\r\n    \"Can you please clarify?\",\r\n    \"That's interesting!\",\r\n    \"Let me think about that...\",\r\n    \"I'm not sure, but I'll try!\",\r\n  ];\r\n\r\n  const customReplies = {\r\n    \"good morning\": \"Very Good Morning!\",\r\n    \"hello\": \"Hi there!\",\r\n    \"hi\": \"Hello! How can I help you?\",\r\n    \"how are you\": \"I'm a bot, but I'm functioning well!\",\r\n    \"bye\": \"Goodbye! Take care!\",\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    const lowerInput = input.trim().toLowerCase();\r\n\r\n    const botReply =\r\n      customReplies[lowerInput] ||\r\n      botReplies[Math.floor(Math.random() * botReplies.length)];\r\n\r\n    const botMessage = {\r\n      sender: \"bot\",\r\n      text: botReply,\r\n    };\r\n\r\n    setMessages((prev) => [...prev, userMessage, botMessage]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") handleSend();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <img src={Robo} alt=\"robot\" id=\"robo\" />\r\n      <h2 id=\"heading\">Chatbot</h2>\r\n      <div className=\"chatbox\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <button onClick={handleSend}><img src/></button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}