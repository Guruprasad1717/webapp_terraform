{"ast":null,"code":"var _jsxFileName = \"D:\\\\all-react-apps\\\\chatboat_app\\\\src\\\\Components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hi! How can I help you today?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const botReplies = [\"I'm here to help!\", \"Can you please clarify?\", \"That's interesting!\", \"Let me think about that...\", \"I'm not sure, but I'll try!\"];\n  const handleSend = () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    const botMessage = {\n      sender: \"bot\",\n      text: botReplies[Math.floor(Math.random() * botReplies.length)]\n    };\n    setMessages(prev => [...prev, userMessage, botMessage]);\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"pxjxzKMNaClEEjMMlnv2JYZXc08=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","input","setInput","botReplies","handleSend","trim","userMessage","botMessage","Math","floor","random","length","prev","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["D:/all-react-apps/chatboat_app/src/Components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"Hi! How can I help you today?\" },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const botReplies = [\r\n    \"I'm here to help!\",\r\n    \"Can you please clarify?\",\r\n    \"That's interesting!\",\r\n    \"Let me think about that...\",\r\n    \"I'm not sure, but I'll try!\",\r\n  ];\r\n\r\n  const handleSend = () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    const botMessage = {\r\n      sender: \"bot\",\r\n      text: botReplies[Math.floor(Math.random() * botReplies.length)],\r\n    };\r\n\r\n    setMessages((prev) => [...prev, userMessage, botMessage]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") handleSend();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h2>Chatbot</h2>\r\n      <div className=\"chatbox\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}